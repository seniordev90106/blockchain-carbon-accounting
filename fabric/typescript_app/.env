
LEDGER_ETH_JSON_RPC_URL="http://localhost:8545"
LEDGER_ETH_NETWORK="hardhat"
LEDGER_EMISSION_TOKEN_CONTRACT_ADDRESS="0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6"
# supports
# 1. plain : user provide their eth_address and eth_secret via request
# 2. kv : eth_address and eth_secret is fetched from the key value secret engine
LEDGER_ETH_TX_SIGNER="plain"


# AWS-S3 configs
# AWS_ACCESS_KEY_ID='secret-id'
# AWS_SECRET_ACCESS_KEY='secret-key'
DEV_S3_ADDRESS='http://localhost:4566'
S3_LOCAL=true
BUCKET_NAME="local-bucket"


VAULT_ENDPOINT='http://127.0.0.1:8200'
VAULT_TOKEN=tokenId
VAULT_KV_MOUNT_PATH=secret

####

APP_PORT=8080
APP_LOG_LEVEL=DEBUG


### Ledger Configs
LEDGER_LOG_LEVEL=DEBUG

## Fabric config
LEDGER_FABRIC_AS_LOCALHOST=true
LEDGER_FABRIC_CCP='../docker-compose-setup/organizations/peerOrganizations/auditor1.carbonAccounting.com/connection-auditor1.json'
LEDGER_FABRIC_ORG_CA='ca.auditor1.carbonAccounting.com'
LEDGER_FABRIC_ORG_MSP='auditor1'

### list signing types as strings separated by a single spacw
LEDGER_FABRIC_TX_SIGNER_TYPES='vault web-socket'
### require if vault signing is enabled
LEDGER_FABRIC_TX_SIGNER_VAULT_MOUNT='transit'


### require if web-socket signing is enabled
WS_IDENTITY_ENDPOINT='http://127.0.0.1:8700'
WS_IDENTITY_PATH_PREFIX='/identity'

# connect to postgres container to seed with UtilityLookupItemInterface and EmissionsFactorInterface for testing
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
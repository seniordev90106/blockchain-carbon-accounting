{
  "address": "0x630192Cc43eA176B7b52995e3Cd1594eaCbaa454",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dclm8_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__abdicate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__executeSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__queueSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dclm8",
      "outputs": [
        {
          "internalType": "contract Dclm8Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct Governor.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6625dd052a37e76507a7c7210310bc27480a91a5db5b6dc5ae9c7e3885fd9c6",
  "receipt": {
    "to": null,
    "from": "0xD32E793008B0FbD13C889E291bc049483Da316bA",
    "contractAddress": "0x630192Cc43eA176B7b52995e3Cd1594eaCbaa454",
    "transactionIndex": 0,
    "gasUsed": "227179",
    "logsBloom": "0x
    "blockHash": "0x5cc5810843f60e61f315259b14e370b899613d822e3bdeb1090275690c350da7",
    "transactionHash": "0xb6625dd052a37e76507a7c7210310bc27480a91a5db5b6dc5ae9c7e3885fd9c6",
    "logs": [],
    "blockNumber": 6149,
    "cumulativeGasUsed": "227179",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x57257E8a359A42cA859d597264017653F0984e03",
    "0xDf7691809610f808Ea311909Fb404197971b1f9D",
    "0xD32E793008B0FbD13C889E291bc049483Da316bA"
  ],
  "solcInputHash": "7fadd47e29560ae3924b7db3beb234c4",
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dclm8_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dclm8\",\"outputs\":[{\"internalType\":\"contract Dclm8Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct Governor.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"VoteCast(address,uint256,bool,uint256)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"dclm8()\":{\"notice\":\"The address of the DAO token\"},\"guardian()\":{\"notice\":\"The address of the Governor Guardian\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"name()\":{\"notice\":\"The name of this contract\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"timelock()\":{\"notice\":\"The address of the timelock\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/Governor.sol\":\"Governor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance/Governor.sol\":{\"content\":\"pragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n// SPDX-License-Identifier: BSD 3-Clause \\\"New\\\" or \\\"Revised\\\" License\\n\\n/* Copyright 2021 Compound Labs, Inc.\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n1. Redistributions of source code must retain the above copyright notice, this\\nlist of conditions and the following disclaimer.\\n2. Redistributions in binary form must reproduce the above copyright notice,\\nthis list of conditions and the following disclaimer in the documentation\\nand/or other materials provided with the distribution.\\n3. Neither the name of the copyright holder nor the names of its contributors\\nmay be used to endorse or promote products derived from this software without\\nspecific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\\n\\n// Original work from Compound: https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/GovernorAlpha.sol\\n// Modified to work in the NetEmissionsTokenNetwork system\\n\\ncontract Governor {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Climate DAO Governor\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public view returns (uint) {\\n        uint initialHolderBalance = dclm8.balanceOf(dclm8.getInitialHolder());\\n        uint totalSupply = dclm8.getTotalSupply();\\n        uint daoTokensInCirculation = totalSupply - initialHolderBalance;\\n        // if tokens in circulation, let 4% of those tokens be the quorum\\n        if (daoTokensInCirculation != 0) {\\n            return div256(daoTokensInCirculation, 25); // divide by 25 to get ~4% of DAO tokens in circulation\\n        }\\n        // otherwise, default to 4% of total supply\\n        return 400000e18; // 400,000 = 4% of Dclm8\\n    }\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint) { return 100000e18; } // 100,000 = 1% of Dclm8\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint) { return 1; } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    function votingPeriod() public pure returns (uint) { return 17280; } // ~3 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the DAO token\\n    Dclm8Interface public dclm8;\\n\\n    /// @notice The address of the Governor Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    struct Proposal {\\n        // @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        // @notice Creator of the proposal\\n        address proposer;\\n\\n        // @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        // @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        // @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        // @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        // @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        // @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        // @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        // @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        // @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        // @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        // @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        // @notes Description of the proposal\\n        string description;\\n\\n        // @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        // @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        // @notice Whether or not the voter supports the proposal\\n        bool support;\\n\\n        // @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(address voter, uint proposalId, bool support, uint votes);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    constructor(address timelock_, address dclm8_, address guardian_) public {\\n        timelock = TimelockInterface(timelock_);\\n        dclm8 = Dclm8Interface(dclm8_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        require(dclm8.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold(), \\\"Governor::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"Governor::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"Governor::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations(), \\\"Governor::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"Governor::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"Governor::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay());\\n        uint endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n\\n        Proposal storage p = proposals[proposalCount];\\n        p.id = proposalCount;\\n        p.proposer = msg.sender;\\n        p.eta = 0;\\n        p.targets = targets;\\n        p.values = values;\\n        p.signatures = signatures;\\n        p.calldatas = calldatas;\\n        p.startBlock = startBlock;\\n        p.endBlock = endBlock;\\n        p.forVotes = 0;\\n        p.againstVotes = 0;\\n        p.canceled = false;\\n        p.executed = false;\\n        p.description = description;\\n\\n        latestProposalIds[p.proposer] = p.id;\\n\\n        emit ProposalCreated(p.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return p.id;\\n    }\\n\\n    function queue(uint proposalId) public {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"Governor::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"Governor::_queueOrRevert: proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint proposalId) public payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"Governor::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction{value: proposal.values[i]}(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint proposalId) public {\\n        ProposalState currentState = state(proposalId);\\n        require(currentState != ProposalState.Executed, \\\"Governor::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(msg.sender == guardian || dclm8.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold(), \\\"Governor::cancel: proposer above threshold\\\");\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint proposalId, address voter) public view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function getDescription(uint proposalId) public view returns (string memory) {\\n        return proposals[proposalId].description;\\n    }\\n\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > 0, \\\"Governor::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes()) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s) public {\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"Governor::castVoteBySig: invalid signature\\\");\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(address voter, uint proposalId, bool support) internal {\\n        require(state(proposalId) == ProposalState.Active, \\\"Governor::_castVote: voting is closed\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"Governor::_castVote: voter already voted\\\");\\n        uint96 votes = dclm8.getPriorVotes(voter, proposal.startBlock);\\n        require(votes > 0, \\\"Governor::_castVote: no eligible votes prior to proposal start block\\\");\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        // check total votes vs DAO token supply. If it matches, set eta to zero so state is successful\\n        uint totalVotes = add256(proposal.forVotes, proposal.againstVotes);\\n        if (dclm8.getTotalSupply() == totalVotes) {\\n            proposal.eta = 0;\\n            proposal.endBlock = sub256(block.number,1);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(msg.sender == guardian, \\\"Governor::__acceptAdmin: sender must be gov guardian\\\");\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(msg.sender == guardian, \\\"Governor::__abdicate: sender must be gov guardian\\\");\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(address newPendingAdmin, uint eta) public {\\n        require(msg.sender == guardian, \\\"Governor::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\");\\n        timelock.queueTransaction(address(timelock), 0, \\\"setPendingAdmin(address)\\\", abi.encode(newPendingAdmin), eta);\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(address newPendingAdmin, uint eta) public {\\n        require(msg.sender == guardian, \\\"Governor::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\");\\n        timelock.executeTransaction(address(timelock), 0, \\\"setPendingAdmin(address)\\\", abi.encode(newPendingAdmin), eta);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function div256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return _div(a, b, \\\"division by zero\\\");\\n    }\\n    function _div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        return c;\\n    }\\n\\n    function getChainId() internal pure returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function GRACE_PERIOD() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface Dclm8Interface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n    function getTotalSupply() external pure returns (uint);\\n    function balanceOf(address account) external view returns (uint);\\n    function getInitialHolder() external pure returns (address);\\n}\\n\",\"keccak256\":\"0xfae985a130efcf4fc4f909c7645d10de7e75248c6664438b3234acb25f496c8d\",\"license\":\"BSD 3-Clause\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620035a4380380620035a4833981016040819052620000349162000077565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000e3565b6000806000606084860312156200008c578283fd5b83516200009981620000ca565b6020850151909350620000ac81620000ca565b6040850151909250620000bf81620000ca565b809150509250925092565b6001600160a01b0381168114620000e057600080fd5b50565b6134b180620000f36000396000f3fe6080604052600436106101b75760003560e01c80634925ec55116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610492578063deaaa7cc146104b2578063e23a9a52146104c7578063fe0d94c1146104f4576101b7565b8063d33219b414610448578063da35c6641461045d578063da95691a14610472576101b7565b806391500671116100c657806391500671146103e957806394a08d5814610409578063b58131b01461041e578063b9a6196114610433576101b7565b80634925ec551461039f578063760fbc13146103bf5780637bdbe4d0146103d4576101b7565b806324bc1a64116101595780633e4f49e6116101335780633e4f49e61461031057806340e58ee51461033d578063452a93201461035d5780634634c61f1461037f576101b7565b806324bc1a64146102b6578063328dd982146102cb5780633932abb1146102fb576101b7565b806315373e3d1161019557806315373e3d1461023f57806317977c611461026157806320606b701461028157806321f43e4214610296576101b7565b8063013cf08b146101bc57806302a251a3146101fb57806306fdde031461021d575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461268a565b610507565b6040516101f29a9998979695949392919061333e565b60405180910390f35b34801561020757600080fd5b506102106105f6565b6040516101f29190612aa8565b34801561022957600080fd5b506102326105fd565b6040516101f29190612b1f565b34801561024b57600080fd5b5061025f61025a3660046126d1565b61062d565b005b34801561026d57600080fd5b5061021061027c3660046124b4565b61063c565b34801561028d57600080fd5b5061021061064e565b3480156102a257600080fd5b5061025f6102b13660046124ec565b610672565b3480156102c257600080fd5b50610210610759565b3480156102d757600080fd5b506102eb6102e636600461268a565b61090c565b6040516101f29493929190612a50565b34801561030757600080fd5b50610210610b9b565b34801561031c57600080fd5b5061033061032b36600461268a565b610ba0565b6040516101f29190612b0b565b34801561034957600080fd5b5061025f61035836600461268a565b610d2a565b34801561036957600080fd5b50610372610f93565b6040516101f29190612901565b34801561038b57600080fd5b5061025f61039a3660046126f5565b610fa2565b3480156103ab57600080fd5b506102326103ba36600461268a565b611152565b3480156103cb57600080fd5b5061025f6111f6565b3480156103e057600080fd5b50610210611232565b3480156103f557600080fd5b5061025f6104043660046124ec565b611237565b34801561041557600080fd5b5061037261130c565b34801561042a57600080fd5b5061021061131b565b34801561043f57600080fd5b5061025f611329565b34801561045457600080fd5b506103726113ae565b34801561046957600080fd5b506102106113bd565b34801561047e57600080fd5b5061021061048d366004612517565b6113c3565b34801561049e57600080fd5b5061025f6104ad36600461268a565b611709565b3480156104be57600080fd5b50610210611973565b3480156104d357600080fd5b506104e76104e23660046126a2565b611997565b6040516101f29190613278565b61025f61050236600461268a565b611a03565b6004602090815260009182526040918290208054600180830154600280850154600786015460088701546009880154600a890154600b8a0154600c8b0180548e516101009b8216158c026000190190911698909804601f81018e90048e0289018e01909e528d8852999c6001600160a01b039098169b959a949993989297919660ff8083169794909204909116949390929091908301828280156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b505050505090508a565b6143805b90565b6040518060400160405280601481526020017321b634b6b0ba32902220a79023b7bb32b93737b960611b81525081565b610638338383611bc8565b5050565b60056020526000908152604090205481565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6002546001600160a01b031633146106a55760405162461bcd60e51b815260040161069c90612e16565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f918391906106cf908790602001612901565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016106fe949392919061292e565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107549190810190612617565b505050565b600154604080516357406cef60e11b8152905160009283926001600160a01b03909116916370a0823191839163ae80d9de91600480820192602092909190829003018186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906124d0565b6040518263ffffffff1660e01b81526004016107ff9190612901565b60206040518083038186803b15801561081757600080fd5b505afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f91906125ff565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a157600080fd5b505afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d991906125ff565b905081810380156108f9576108ef816019611e76565b93505050506105fa565b6954b40b1f852bda000000935050505090565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561098e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610970575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156109e057602002820191906000526020600020905b8154815260200190600101908083116109cc575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610ab35760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610a9f5780601f10610a7457610100808354040283529160200191610a9f565b820191906000526020600020905b815481529060010190602001808311610a8257829003601f168201915b505050505081526020019060010190610a08565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610b855760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b505050505081526020019060010190610ada565b5050505090509450945094509450509193509193565b600190565b60008160035410158015610bb45750600082115b610bd05760405162461bcd60e51b815260040161069c90612e83565b6000828152600460205260409020600b81015460ff1615610bf5576002915050610d25565b80600701544311610c0a576000915050610d25565b80600801544311610c1f576001915050610d25565b80600a01548160090154111580610c405750610c39610759565b8160090154105b15610c4f576003915050610d25565b6002810154610c62576004915050610d25565b600b810154610100900460ff1615610c7e576007915050610d25565b610d0f816002015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd257600080fd5b505afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a91906125ff565b611eb2565b4210610d1f576006915050610d25565b60059150505b919050565b6000610d3582610ba0565b90506007816007811115610d4557fe5b1415610d635760405162461bcd60e51b815260040161069c90612d04565b60008281526004602052604090206002546001600160a01b0316331480610e2e5750610d8d61131b565b60018054838201546001600160a01b039182169263782d6fe19290911690610db6904390611ed7565b6040518363ffffffff1660e01b8152600401610dd3929190612915565b60206040518083038186803b158015610deb57600080fd5b505afa158015610dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e23919061274b565b6001600160601b0316105b610e4a5760405162461bcd60e51b815260040161069c90613113565b600b8101805460ff1916600117905560005b6003820154811015610f56576000546003830180546001600160a01b039092169163591fcdfe919084908110610e8e57fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610eb657fe5b9060005260206000200154856005018581548110610ed057fe5b90600052602060002001866006018681548110610ee957fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610f18959493929190612a17565b600060405180830381600087803b158015610f3257600080fd5b505af1158015610f46573d6000803e3d6000fd5b505060019092019150610e5c9050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610f869190612aa8565b60405180910390a1505050565b6002546001600160a01b031681565b60408051808201909152601481527321b634b6b0ba32902220a79023b7bb32b93737b960611b60209091015260007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8667fc91d7024f1084cf2cbc672fa7c9487148f930f2547c197a0c5a286cc6f4923ea61101a611eff565b3060405160200161102e9493929190612ab1565b60405160208183030381529060405280519060200120905060007f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee878760405160200161107d93929190612ad5565b604051602081830303815290604052805190602001209050600082826040516020016110aa9291906128e6565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516110e79493929190612aed565b6020604051602081039080840390855afa158015611109573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661113c5760405162461bcd60e51b815260040161069c9061322e565b611147818a8a611bc8565b505050505050505050565b600081815260046020908152604091829020600c0180548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156111ea5780601f106111bf576101008083540402835291602001916111ea565b820191906000526020600020905b8154815290600101906020018083116111cd57829003601f168201915b50505050509050919050565b6002546001600160a01b031633146112205760405162461bcd60e51b815260040161069c90612fc9565b600280546001600160a01b0319169055565b600a90565b6002546001600160a01b031633146112615760405162461bcd60e51b815260040161069c90612bec565b600080546040516001600160a01b0390911691633a66f9019183919061128b908790602001612901565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016112ba949392919061292e565b602060405180830381600087803b1580156112d457600080fd5b505af11580156112e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906125ff565b6001546001600160a01b031681565b69152d02c7e14af680000090565b6002546001600160a01b031633146113535760405162461bcd60e51b815260040161069c90613077565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b15801561139457600080fd5b505af11580156113a8573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b60006113cd61131b565b600180546001600160a01b03169063782d6fe19033906113ee904390611ed7565b6040518363ffffffff1660e01b815260040161140b929190612915565b60206040518083038186803b15801561142357600080fd5b505afa158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b919061274b565b6001600160601b0316116114815760405162461bcd60e51b815260040161069c90612b32565b84518651148015611493575083518651145b80156114a0575082518651145b6114bc5760405162461bcd60e51b815260040161069c90612b8f565b85516114da5760405162461bcd60e51b815260040161069c90612d55565b6114e2611232565b865111156115025760405162461bcd60e51b815260040161069c90612cc1565b33600090815260056020526040902054801561157f57600061152382610ba0565b9050600181600781111561153357fe5b14156115515760405162461bcd60e51b815260040161069c90612ec7565b600081600781111561155f57fe5b141561157d5760405162461bcd60e51b815260040161069c90612d9c565b505b600061158d43610d0a610b9b565b9050600061159d82610d0a6105f6565b6003805460019081018083556000818152600460209081526040822092835592820180546001600160a01b0319163317905560028201558c51939450926115e9928401918d0190612099565b5088516115ff90600483019060208c01906120fe565b50875161161590600583019060208b0190612145565b50865161162b90600683019060208a019061219e565b506007810183905560088101829055600060098201819055600a820155600b8101805461ffff19169055855161166a90600c83019060208901906121f7565b508060000154600560008360010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000154338c8c8c8c89898e6040516116f3999897969594939291906132a6565b60405180910390a1549998505050505050505050565b600461171482610ba0565b600781111561171f57fe5b1461173c5760405162461bcd60e51b815260040161069c906131d1565b600081815260046020818152604080842084548251630d48571f60e31b815292519195946117919442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610cd257600080fd5b905060005b6003830154811015611939576119318360030182815481106117b457fe5b6000918252602090912001546004850180546001600160a01b0390921691849081106117dc57fe5b90600052602060002001548560050184815481106117f657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156118845780601f1061185957610100808354040283529160200191611884565b820191906000526020600020905b81548152906001019060200180831161186757829003601f168201915b505050505086600601858154811061189857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156119265780601f106118fb57610100808354040283529160200191611926565b820191906000526020600020905b81548152906001019060200180831161190957829003601f168201915b505050505086611f03565b600101611796565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610f8690859084906133a7565b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b61199f612264565b5060009182526004602090815260408084206001600160a01b03939093168452600d9092018152918190208151606081018352905460ff80821615158352610100820416151593820193909352620100009092046001600160601b03169082015290565b6005611a0e82610ba0565b6007811115611a1957fe5b14611a365760405162461bcd60e51b815260040161069c90612f40565b6000818152600460205260408120600b8101805461ff001916610100179055905b6003820154811015611b8c576000546004830180546001600160a01b0390921691630825f38f919084908110611a8957fe5b9060005260206000200154846003018481548110611aa357fe5b6000918252602090912001546004860180546001600160a01b039092169186908110611acb57fe5b9060005260206000200154866005018681548110611ae557fe5b90600052602060002001876006018781548110611afe57fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611b2d959493929190612a17565b6000604051808303818588803b158015611b4657600080fd5b505af1158015611b5a573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611b839190810190612617565b50600101611a57565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f82604051611bbc9190612aa8565b60405180910390a15050565b6001611bd383610ba0565b6007811115611bde57fe5b14611bfb5760405162461bcd60e51b815260040161069c9061315d565b60008281526004602090815260408083206001600160a01b0387168452600d8101909252909120805460ff1615611c445760405162461bcd60e51b815260040161069c906130cb565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611c7a918a91600401612915565b60206040518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca919061274b565b90506000816001600160601b031611611cf55760405162461bcd60e51b815260040161069c90612c57565b8315611d1c57611d128360090154826001600160601b0316611eb2565b6009840155611d39565b611d3383600a0154826001600160601b0316611eb2565b600a8401555b6000611d4d846009015485600a0154611eb2565b905080600160009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9e57600080fd5b505afa158015611db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd691906125ff565b1415611df45760006002850155611dee436001611ed7565b60088501555b8254600160ff199091161761ff00191661010086151502176dffffffffffffffffffffffff00001916620100006001600160601b038416021783556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611e6590899089908990879061299a565b60405180910390a150505050505050565b6000611eab83836040518060400160405280601081526020016f6469766973696f6e206279207a65726f60801b815250612062565b9392505050565b600082820183811015611eab5760405162461bcd60e51b815260040161069c90612f9e565b600082821115611ef95760405162461bcd60e51b815260040161069c906131a2565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611f3190889088908890889088906020016129cb565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611f639190612aa8565b60206040518083038186803b158015611f7b57600080fd5b505afa158015611f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb391906125e3565b15611fd05760405162461bcd60e51b815260040161069c9061301a565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f9019061200890889088908890889088906004016129cb565b602060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205a91906125ff565b505050505050565b600081836120835760405162461bcd60e51b815260040161069c9190612b1f565b50600083858161208f57fe5b0495945050505050565b8280548282559060005260206000209081019282156120ee579160200282015b828111156120ee57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906120b9565b506120fa929150612284565b5090565b828054828255906000526020600020908101928215612139579160200282015b8281111561213957825182559160200191906001019061211e565b506120fa9291506122a3565b828054828255906000526020600020908101928215612192579160200282015b8281111561219257825180516121829184916020909101906121f7565b5091602001919060010190612165565b506120fa9291506122b8565b8280548282559060005260206000209081019282156121eb579160200282015b828111156121eb57825180516121db9184916020909101906121f7565b50916020019190600101906121be565b506120fa9291506122d5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223857805160ff1916838001178555612139565b82800160010185558215612139579182018281111561213957825182559160200191906001019061211e565b604080516060810182526000808252602082018190529181019190915290565b5b808211156120fa5780546001600160a01b0319168155600101612285565b5b808211156120fa57600081556001016122a4565b808211156120fa5760006122cc82826122f2565b506001016122b8565b808211156120fa5760006122e982826122f2565b506001016122d5565b50805460018160011615610100020316600290046000825580601f106123185750612336565b601f01602090049060005260206000209081019061233691906122a3565b50565b600082601f830112612349578081fd5b813561235c612357826133dc565b6133b5565b81815291506020808301908481018184028601820187101561237d57600080fd5b60005b848110156123a557813561239381613458565b84529282019290820190600101612380565b505050505092915050565b600082601f8301126123c0578081fd5b81356123ce612357826133dc565b818152915060208083019084810160005b848110156123a5576123f6888484358a0101612466565b845292820192908201906001016123df565b600082601f830112612418578081fd5b8135612426612357826133dc565b81815291506020808301908481018184028601820187101561244757600080fd5b60005b848110156123a55781358452928201929082019060010161244a565b600082601f830112612476578081fd5b8135612484612357826133fc565b915080825283602082850101111561249b57600080fd5b8060208401602084013760009082016020015292915050565b6000602082840312156124c5578081fd5b8135611eab81613458565b6000602082840312156124e1578081fd5b8151611eab81613458565b600080604083850312156124fe578081fd5b823561250981613458565b946020939093013593505050565b600080600080600060a0868803121561252e578081fd5b853567ffffffffffffffff80821115612545578283fd5b61255189838a01612339565b96506020880135915080821115612566578283fd5b61257289838a01612408565b95506040880135915080821115612587578283fd5b61259389838a016123b0565b945060608801359150808211156125a8578283fd5b6125b489838a016123b0565b935060808801359150808211156125c9578283fd5b506125d688828901612466565b9150509295509295909350565b6000602082840312156125f4578081fd5b8151611eab8161346d565b600060208284031215612610578081fd5b5051919050565b600060208284031215612628578081fd5b815167ffffffffffffffff81111561263e578182fd5b8201601f8101841361264e578182fd5b805161265c612357826133fc565b818152856020838501011115612670578384fd5b61268182602083016020860161342c565b95945050505050565b60006020828403121561269b578081fd5b5035919050565b600080604083850312156126b4578182fd5b8235915060208301356126c681613458565b809150509250929050565b600080604083850312156126e3578182fd5b8235915060208301356126c68161346d565b600080600080600060a0868803121561270c578283fd5b85359450602086013561271e8161346d565b9350604086013560ff81168114612733578384fd5b94979396509394606081013594506080013592915050565b60006020828403121561275c578081fd5b81516001600160601b0381168114611eab578182fd5b6000815180845260208085019450808401835b838110156127aa5781516001600160a01b031687529582019590820190600101612785565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156127fb5782840389526127e9848351612837565b988501989350908401906001016127d1565b5091979650505050505050565b6000815180845260208085019450808401835b838110156127aa5781518752958201959082019060010161281b565b6000815180845261284f81602086016020860161342c565b601f01601f19169290920160200192915050565b60008154600180821660008114612881576001811461289f576128dd565b60028304607f16865260ff19831660208701526040860193506128dd565b600283048087526128af86613420565b60005b828110156128d35781546020828b01015284820191506020810190506128b2565b8801602001955050505b50505092915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015260a06040830152601860a08301527f73657450656e64696e6741646d696e286164647265737329000000000000000060c083015260e0606083015261298960e0830185612837565b905082608083015295945050505050565b6001600160a01b039490941684526020840192909252151560408301526001600160601b0316606082015260800190565b600060018060a01b038716825285602083015260a060408301526129f260a0830186612837565b8281036060840152612a048186612837565b9150508260808301529695505050505050565b600060018060a01b038716825285602083015260a06040830152612a3e60a0830186612863565b8281036060840152612a048186612863565b600060808252612a636080830187612772565b8281036020840152612a758187612808565b90508281036040840152612a8981866127b5565b90508281036060840152612a9d81856127b5565b979650505050505050565b90815260200190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b92835260208301919091521515604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b6020810160088310612b1957fe5b91905290565b600060208252611eab6020830184612837565b6020808252603a908201527f476f7665726e6f723a3a70726f706f73653a2070726f706f73657220766f746560408201527f732062656c6f772070726f706f73616c207468726573686f6c64000000000000606082015260800190565b6020808252603f908201527f476f7665726e6f723a3a70726f706f73653a2070726f706f73616c2066756e6360408201527f74696f6e20696e666f726d6174696f6e206172697479206d69736d6174636800606082015260800190565b60208082526045908201527f476f7665726e6f723a3a5f5f717565756553657454696d656c6f636b50656e6460408201527f696e6741646d696e3a2073656e646572206d75737420626520676f7620677561606082015264393234b0b760d91b608082015260a00190565b60208082526044908201527f476f7665726e6f723a3a5f63617374566f74653a206e6f20656c696769626c6560408201527f20766f746573207072696f7220746f2070726f706f73616c20737461727420626060820152636c6f636b60e01b608082015260a00190565b60208082526023908201527f476f7665726e6f723a3a70726f706f73653a20746f6f206d616e7920616374696040820152626f6e7360e81b606082015260800190565b60208082526031908201527f476f7665726e6f723a3a63616e63656c3a2063616e6e6f742063616e63656c20604082015270195e1958dd5d1959081c1c9bdc1bdcd85b607a1b606082015260800190565b60208082526027908201527f476f7665726e6f723a3a70726f706f73653a206d7573742070726f7669646520604082015266616374696f6e7360c81b606082015260800190565b60208082526054908201527f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7060408201527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560608201527318591e481c195b991a5b99c81c1c9bdc1bdcd85b60621b608082015260a00190565b60208082526047908201527f476f7665726e6f723a3a5f5f6578656375746553657454696d656c6f636b506560408201527f6e64696e6741646d696e3a2073656e646572206d75737420626520676f7620676060820152663ab0b93234b0b760c91b608082015260a00190565b60208082526024908201527f476f7665726e6f723a3a73746174653a20696e76616c69642070726f706f73616040820152631b081a5960e21b606082015260800190565b60208082526053908201527f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7060408201527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560608201527218591e481858dd1a5d99481c1c9bdc1bdcd85b606a1b608082015260a00190565b602080825260409082018190527f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e20908201527f6f6e6c7920626520657865637574656420696620697420697320717565756564606082015260800190565b6020808252601190820152706164646974696f6e206f766572666c6f7760781b604082015260600190565b60208082526031908201527f476f7665726e6f723a3a5f5f61626469636174653a2073656e646572206d75736040820152703a1031329033b7bb1033bab0b93234b0b760791b606082015260800190565b6020808252603f908201527f476f7665726e6f723a3a5f71756575654f725265766572743a2070726f706f7360408201527f616c20616374696f6e20616c7265616479207175657565642061742065746100606082015260800190565b60208082526034908201527f476f7665726e6f723a3a5f5f61636365707441646d696e3a2073656e6465722060408201527336bab9ba1031329033b7bb1033bab0b93234b0b760611b606082015260800190565b60208082526028908201527f476f7665726e6f723a3a5f63617374566f74653a20766f74657220616c726561604082015267191e481d9bdd195960c21b606082015260800190565b6020808252602a908201527f476f7665726e6f723a3a63616e63656c3a2070726f706f7365722061626f7665604082015269081d1a1c995cda1bdb1960b21b606082015260800190565b60208082526025908201527f476f7665726e6f723a3a5f63617374566f74653a20766f74696e6720697320636040820152641b1bdcd95960da1b606082015260800190565b6020808252601590820152747375627472616374696f6e20756e646572666c6f7760581b604082015260600190565b6020808252603f908201527f476f7665726e6f723a3a71756575653a2070726f706f73616c2063616e206f6e60408201527f6c79206265207175657565642069662069742069732073756363656564656400606082015260800190565b6020808252602a908201527f476f7665726e6f723a3a63617374566f746542795369673a20696e76616c6964604082015269207369676e617475726560b01b606082015260800190565b8151151581526020808301511515908201526040918201516001600160601b03169181019190915260600190565b8981526001600160a01b0389166020820152610120604082018190526000906132d18382018b612772565b905082810360608401526132e5818a612808565b905082810360808401526132f981896127b5565b905082810360a084015261330d81886127b5565b90508560c08401528460e084015282810361010084015261332e8185612837565b9c9b505050505050505050505050565b60006101408c835260018060a01b038c1660208401528a60408401528960608401528860808401528760a08401528660c084015285151560e08401528415156101008401528061012084015261339681840185612837565b9d9c50505050505050505050505050565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156133d457600080fd5b604052919050565b600067ffffffffffffffff8211156133f2578081fd5b5060209081020190565b600067ffffffffffffffff821115613412578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b8381101561344757818101518382015260200161342f565b838111156113a85750506000910152565b6001600160a01b038116811461233657600080fd5b801515811461233657600080fdfea264697066735822122099306456efe52c93527a81cd4ad441b8f957b2534676b56de8091f972c2a7baf64736f6c63430007000033",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80634925ec55116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610492578063deaaa7cc146104b2578063e23a9a52146104c7578063fe0d94c1146104f4576101b7565b8063d33219b414610448578063da35c6641461045d578063da95691a14610472576101b7565b806391500671116100c657806391500671146103e957806394a08d5814610409578063b58131b01461041e578063b9a6196114610433576101b7565b80634925ec551461039f578063760fbc13146103bf5780637bdbe4d0146103d4576101b7565b806324bc1a64116101595780633e4f49e6116101335780633e4f49e61461031057806340e58ee51461033d578063452a93201461035d5780634634c61f1461037f576101b7565b806324bc1a64146102b6578063328dd982146102cb5780633932abb1146102fb576101b7565b806315373e3d1161019557806315373e3d1461023f57806317977c611461026157806320606b701461028157806321f43e4214610296576101b7565b8063013cf08b146101bc57806302a251a3146101fb57806306fdde031461021d575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461268a565b610507565b6040516101f29a9998979695949392919061333e565b60405180910390f35b34801561020757600080fd5b506102106105f6565b6040516101f29190612aa8565b34801561022957600080fd5b506102326105fd565b6040516101f29190612b1f565b34801561024b57600080fd5b5061025f61025a3660046126d1565b61062d565b005b34801561026d57600080fd5b5061021061027c3660046124b4565b61063c565b34801561028d57600080fd5b5061021061064e565b3480156102a257600080fd5b5061025f6102b13660046124ec565b610672565b3480156102c257600080fd5b50610210610759565b3480156102d757600080fd5b506102eb6102e636600461268a565b61090c565b6040516101f29493929190612a50565b34801561030757600080fd5b50610210610b9b565b34801561031c57600080fd5b5061033061032b36600461268a565b610ba0565b6040516101f29190612b0b565b34801561034957600080fd5b5061025f61035836600461268a565b610d2a565b34801561036957600080fd5b50610372610f93565b6040516101f29190612901565b34801561038b57600080fd5b5061025f61039a3660046126f5565b610fa2565b3480156103ab57600080fd5b506102326103ba36600461268a565b611152565b3480156103cb57600080fd5b5061025f6111f6565b3480156103e057600080fd5b50610210611232565b3480156103f557600080fd5b5061025f6104043660046124ec565b611237565b34801561041557600080fd5b5061037261130c565b34801561042a57600080fd5b5061021061131b565b34801561043f57600080fd5b5061025f611329565b34801561045457600080fd5b506103726113ae565b34801561046957600080fd5b506102106113bd565b34801561047e57600080fd5b5061021061048d366004612517565b6113c3565b34801561049e57600080fd5b5061025f6104ad36600461268a565b611709565b3480156104be57600080fd5b50610210611973565b3480156104d357600080fd5b506104e76104e23660046126a2565b611997565b6040516101f29190613278565b61025f61050236600461268a565b611a03565b6004602090815260009182526040918290208054600180830154600280850154600786015460088701546009880154600a890154600b8a0154600c8b0180548e516101009b8216158c026000190190911698909804601f81018e90048e0289018e01909e528d8852999c6001600160a01b039098169b959a949993989297919660ff8083169794909204909116949390929091908301828280156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b505050505090508a565b6143805b90565b6040518060400160405280601481526020017321b634b6b0ba32902220a79023b7bb32b93737b960611b81525081565b610638338383611bc8565b5050565b60056020526000908152604090205481565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6002546001600160a01b031633146106a55760405162461bcd60e51b815260040161069c90612e16565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f918391906106cf908790602001612901565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016106fe949392919061292e565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107549190810190612617565b505050565b600154604080516357406cef60e11b8152905160009283926001600160a01b03909116916370a0823191839163ae80d9de91600480820192602092909190829003018186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906124d0565b6040518263ffffffff1660e01b81526004016107ff9190612901565b60206040518083038186803b15801561081757600080fd5b505afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f91906125ff565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a157600080fd5b505afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d991906125ff565b905081810380156108f9576108ef816019611e76565b93505050506105fa565b6954b40b1f852bda000000935050505090565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561098e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610970575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156109e057602002820191906000526020600020905b8154815260200190600101908083116109cc575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610ab35760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610a9f5780601f10610a7457610100808354040283529160200191610a9f565b820191906000526020600020905b815481529060010190602001808311610a8257829003601f168201915b505050505081526020019060010190610a08565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610b855760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b505050505081526020019060010190610ada565b5050505090509450945094509450509193509193565b600190565b60008160035410158015610bb45750600082115b610bd05760405162461bcd60e51b815260040161069c90612e83565b6000828152600460205260409020600b81015460ff1615610bf5576002915050610d25565b80600701544311610c0a576000915050610d25565b80600801544311610c1f576001915050610d25565b80600a01548160090154111580610c405750610c39610759565b8160090154105b15610c4f576003915050610d25565b6002810154610c62576004915050610d25565b600b810154610100900460ff1615610c7e576007915050610d25565b610d0f816002015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd257600080fd5b505afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a91906125ff565b611eb2565b4210610d1f576006915050610d25565b60059150505b919050565b6000610d3582610ba0565b90506007816007811115610d4557fe5b1415610d635760405162461bcd60e51b815260040161069c90612d04565b60008281526004602052604090206002546001600160a01b0316331480610e2e5750610d8d61131b565b60018054838201546001600160a01b039182169263782d6fe19290911690610db6904390611ed7565b6040518363ffffffff1660e01b8152600401610dd3929190612915565b60206040518083038186803b158015610deb57600080fd5b505afa158015610dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e23919061274b565b6001600160601b0316105b610e4a5760405162461bcd60e51b815260040161069c90613113565b600b8101805460ff1916600117905560005b6003820154811015610f56576000546003830180546001600160a01b039092169163591fcdfe919084908110610e8e57fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610eb657fe5b9060005260206000200154856005018581548110610ed057fe5b90600052602060002001866006018681548110610ee957fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610f18959493929190612a17565b600060405180830381600087803b158015610f3257600080fd5b505af1158015610f46573d6000803e3d6000fd5b505060019092019150610e5c9050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610f869190612aa8565b60405180910390a1505050565b6002546001600160a01b031681565b60408051808201909152601481527321b634b6b0ba32902220a79023b7bb32b93737b960611b60209091015260007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8667fc91d7024f1084cf2cbc672fa7c9487148f930f2547c197a0c5a286cc6f4923ea61101a611eff565b3060405160200161102e9493929190612ab1565b60405160208183030381529060405280519060200120905060007f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee878760405160200161107d93929190612ad5565b604051602081830303815290604052805190602001209050600082826040516020016110aa9291906128e6565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516110e79493929190612aed565b6020604051602081039080840390855afa158015611109573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661113c5760405162461bcd60e51b815260040161069c9061322e565b611147818a8a611bc8565b505050505050505050565b600081815260046020908152604091829020600c0180548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156111ea5780601f106111bf576101008083540402835291602001916111ea565b820191906000526020600020905b8154815290600101906020018083116111cd57829003601f168201915b50505050509050919050565b6002546001600160a01b031633146112205760405162461bcd60e51b815260040161069c90612fc9565b600280546001600160a01b0319169055565b600a90565b6002546001600160a01b031633146112615760405162461bcd60e51b815260040161069c90612bec565b600080546040516001600160a01b0390911691633a66f9019183919061128b908790602001612901565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016112ba949392919061292e565b602060405180830381600087803b1580156112d457600080fd5b505af11580156112e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906125ff565b6001546001600160a01b031681565b69152d02c7e14af680000090565b6002546001600160a01b031633146113535760405162461bcd60e51b815260040161069c90613077565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b15801561139457600080fd5b505af11580156113a8573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b60006113cd61131b565b600180546001600160a01b03169063782d6fe19033906113ee904390611ed7565b6040518363ffffffff1660e01b815260040161140b929190612915565b60206040518083038186803b15801561142357600080fd5b505afa158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b919061274b565b6001600160601b0316116114815760405162461bcd60e51b815260040161069c90612b32565b84518651148015611493575083518651145b80156114a0575082518651145b6114bc5760405162461bcd60e51b815260040161069c90612b8f565b85516114da5760405162461bcd60e51b815260040161069c90612d55565b6114e2611232565b865111156115025760405162461bcd60e51b815260040161069c90612cc1565b33600090815260056020526040902054801561157f57600061152382610ba0565b9050600181600781111561153357fe5b14156115515760405162461bcd60e51b815260040161069c90612ec7565b600081600781111561155f57fe5b141561157d5760405162461bcd60e51b815260040161069c90612d9c565b505b600061158d43610d0a610b9b565b9050600061159d82610d0a6105f6565b6003805460019081018083556000818152600460209081526040822092835592820180546001600160a01b0319163317905560028201558c51939450926115e9928401918d0190612099565b5088516115ff90600483019060208c01906120fe565b50875161161590600583019060208b0190612145565b50865161162b90600683019060208a019061219e565b506007810183905560088101829055600060098201819055600a820155600b8101805461ffff19169055855161166a90600c83019060208901906121f7565b508060000154600560008360010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000154338c8c8c8c89898e6040516116f3999897969594939291906132a6565b60405180910390a1549998505050505050505050565b600461171482610ba0565b600781111561171f57fe5b1461173c5760405162461bcd60e51b815260040161069c906131d1565b600081815260046020818152604080842084548251630d48571f60e31b815292519195946117919442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610cd257600080fd5b905060005b6003830154811015611939576119318360030182815481106117b457fe5b6000918252602090912001546004850180546001600160a01b0390921691849081106117dc57fe5b90600052602060002001548560050184815481106117f657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156118845780601f1061185957610100808354040283529160200191611884565b820191906000526020600020905b81548152906001019060200180831161186757829003601f168201915b505050505086600601858154811061189857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156119265780601f106118fb57610100808354040283529160200191611926565b820191906000526020600020905b81548152906001019060200180831161190957829003601f168201915b505050505086611f03565b600101611796565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610f8690859084906133a7565b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b61199f612264565b5060009182526004602090815260408084206001600160a01b03939093168452600d9092018152918190208151606081018352905460ff80821615158352610100820416151593820193909352620100009092046001600160601b03169082015290565b6005611a0e82610ba0565b6007811115611a1957fe5b14611a365760405162461bcd60e51b815260040161069c90612f40565b6000818152600460205260408120600b8101805461ff001916610100179055905b6003820154811015611b8c576000546004830180546001600160a01b0390921691630825f38f919084908110611a8957fe5b9060005260206000200154846003018481548110611aa357fe5b6000918252602090912001546004860180546001600160a01b039092169186908110611acb57fe5b9060005260206000200154866005018681548110611ae557fe5b90600052602060002001876006018781548110611afe57fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611b2d959493929190612a17565b6000604051808303818588803b158015611b4657600080fd5b505af1158015611b5a573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611b839190810190612617565b50600101611a57565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f82604051611bbc9190612aa8565b60405180910390a15050565b6001611bd383610ba0565b6007811115611bde57fe5b14611bfb5760405162461bcd60e51b815260040161069c9061315d565b60008281526004602090815260408083206001600160a01b0387168452600d8101909252909120805460ff1615611c445760405162461bcd60e51b815260040161069c906130cb565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611c7a918a91600401612915565b60206040518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca919061274b565b90506000816001600160601b031611611cf55760405162461bcd60e51b815260040161069c90612c57565b8315611d1c57611d128360090154826001600160601b0316611eb2565b6009840155611d39565b611d3383600a0154826001600160601b0316611eb2565b600a8401555b6000611d4d846009015485600a0154611eb2565b905080600160009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9e57600080fd5b505afa158015611db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd691906125ff565b1415611df45760006002850155611dee436001611ed7565b60088501555b8254600160ff199091161761ff00191661010086151502176dffffffffffffffffffffffff00001916620100006001600160601b038416021783556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611e6590899089908990879061299a565b60405180910390a150505050505050565b6000611eab83836040518060400160405280601081526020016f6469766973696f6e206279207a65726f60801b815250612062565b9392505050565b600082820183811015611eab5760405162461bcd60e51b815260040161069c90612f9e565b600082821115611ef95760405162461bcd60e51b815260040161069c906131a2565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611f3190889088908890889088906020016129cb565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611f639190612aa8565b60206040518083038186803b158015611f7b57600080fd5b505afa158015611f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb391906125e3565b15611fd05760405162461bcd60e51b815260040161069c9061301a565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f9019061200890889088908890889088906004016129cb565b602060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205a91906125ff565b505050505050565b600081836120835760405162461bcd60e51b815260040161069c9190612b1f565b50600083858161208f57fe5b0495945050505050565b8280548282559060005260206000209081019282156120ee579160200282015b828111156120ee57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906120b9565b506120fa929150612284565b5090565b828054828255906000526020600020908101928215612139579160200282015b8281111561213957825182559160200191906001019061211e565b506120fa9291506122a3565b828054828255906000526020600020908101928215612192579160200282015b8281111561219257825180516121829184916020909101906121f7565b5091602001919060010190612165565b506120fa9291506122b8565b8280548282559060005260206000209081019282156121eb579160200282015b828111156121eb57825180516121db9184916020909101906121f7565b50916020019190600101906121be565b506120fa9291506122d5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223857805160ff1916838001178555612139565b82800160010185558215612139579182018281111561213957825182559160200191906001019061211e565b604080516060810182526000808252602082018190529181019190915290565b5b808211156120fa5780546001600160a01b0319168155600101612285565b5b808211156120fa57600081556001016122a4565b808211156120fa5760006122cc82826122f2565b506001016122b8565b808211156120fa5760006122e982826122f2565b506001016122d5565b50805460018160011615610100020316600290046000825580601f106123185750612336565b601f01602090049060005260206000209081019061233691906122a3565b50565b600082601f830112612349578081fd5b813561235c612357826133dc565b6133b5565b81815291506020808301908481018184028601820187101561237d57600080fd5b60005b848110156123a557813561239381613458565b84529282019290820190600101612380565b505050505092915050565b600082601f8301126123c0578081fd5b81356123ce612357826133dc565b818152915060208083019084810160005b848110156123a5576123f6888484358a0101612466565b845292820192908201906001016123df565b600082601f830112612418578081fd5b8135612426612357826133dc565b81815291506020808301908481018184028601820187101561244757600080fd5b60005b848110156123a55781358452928201929082019060010161244a565b600082601f830112612476578081fd5b8135612484612357826133fc565b915080825283602082850101111561249b57600080fd5b8060208401602084013760009082016020015292915050565b6000602082840312156124c5578081fd5b8135611eab81613458565b6000602082840312156124e1578081fd5b8151611eab81613458565b600080604083850312156124fe578081fd5b823561250981613458565b946020939093013593505050565b600080600080600060a0868803121561252e578081fd5b853567ffffffffffffffff80821115612545578283fd5b61255189838a01612339565b96506020880135915080821115612566578283fd5b61257289838a01612408565b95506040880135915080821115612587578283fd5b61259389838a016123b0565b945060608801359150808211156125a8578283fd5b6125b489838a016123b0565b935060808801359150808211156125c9578283fd5b506125d688828901612466565b9150509295509295909350565b6000602082840312156125f4578081fd5b8151611eab8161346d565b600060208284031215612610578081fd5b5051919050565b600060208284031215612628578081fd5b815167ffffffffffffffff81111561263e578182fd5b8201601f8101841361264e578182fd5b805161265c612357826133fc565b818152856020838501011115612670578384fd5b61268182602083016020860161342c565b95945050505050565b60006020828403121561269b578081fd5b5035919050565b600080604083850312156126b4578182fd5b8235915060208301356126c681613458565b809150509250929050565b600080604083850312156126e3578182fd5b8235915060208301356126c68161346d565b600080600080600060a0868803121561270c578283fd5b85359450602086013561271e8161346d565b9350604086013560ff81168114612733578384fd5b94979396509394606081013594506080013592915050565b60006020828403121561275c578081fd5b81516001600160601b0381168114611eab578182fd5b6000815180845260208085019450808401835b838110156127aa5781516001600160a01b031687529582019590820190600101612785565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156127fb5782840389526127e9848351612837565b988501989350908401906001016127d1565b5091979650505050505050565b6000815180845260208085019450808401835b838110156127aa5781518752958201959082019060010161281b565b6000815180845261284f81602086016020860161342c565b601f01601f19169290920160200192915050565b60008154600180821660008114612881576001811461289f576128dd565b60028304607f16865260ff19831660208701526040860193506128dd565b600283048087526128af86613420565b60005b828110156128d35781546020828b01015284820191506020810190506128b2565b8801602001955050505b50505092915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015260a06040830152601860a08301527f73657450656e64696e6741646d696e286164647265737329000000000000000060c083015260e0606083015261298960e0830185612837565b905082608083015295945050505050565b6001600160a01b039490941684526020840192909252151560408301526001600160601b0316606082015260800190565b600060018060a01b038716825285602083015260a060408301526129f260a0830186612837565b8281036060840152612a048186612837565b9150508260808301529695505050505050565b600060018060a01b038716825285602083015260a06040830152612a3e60a0830186612863565b8281036060840152612a048186612863565b600060808252612a636080830187612772565b8281036020840152612a758187612808565b90508281036040840152612a8981866127b5565b90508281036060840152612a9d81856127b5565b979650505050505050565b90815260200190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b92835260208301919091521515604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b6020810160088310612b1957fe5b91905290565b600060208252611eab6020830184612837565b6020808252603a908201527f476f7665726e6f723a3a70726f706f73653a2070726f706f73657220766f746560408201527f732062656c6f772070726f706f73616c207468726573686f6c64000000000000606082015260800190565b6020808252603f908201527f476f7665726e6f723a3a70726f706f73653a2070726f706f73616c2066756e6360408201527f74696f6e20696e666f726d6174696f6e206172697479206d69736d6174636800606082015260800190565b60208082526045908201527f476f7665726e6f723a3a5f5f717565756553657454696d656c6f636b50656e6460408201527f696e6741646d696e3a2073656e646572206d75737420626520676f7620677561606082015264393234b0b760d91b608082015260a00190565b60208082526044908201527f476f7665726e6f723a3a5f63617374566f74653a206e6f20656c696769626c6560408201527f20766f746573207072696f7220746f2070726f706f73616c20737461727420626060820152636c6f636b60e01b608082015260a00190565b60208082526023908201527f476f7665726e6f723a3a70726f706f73653a20746f6f206d616e7920616374696040820152626f6e7360e81b606082015260800190565b60208082526031908201527f476f7665726e6f723a3a63616e63656c3a2063616e6e6f742063616e63656c20604082015270195e1958dd5d1959081c1c9bdc1bdcd85b607a1b606082015260800190565b60208082526027908201527f476f7665726e6f723a3a70726f706f73653a206d7573742070726f7669646520604082015266616374696f6e7360c81b606082015260800190565b60208082526054908201527f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7060408201527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560608201527318591e481c195b991a5b99c81c1c9bdc1bdcd85b60621b608082015260a00190565b60208082526047908201527f476f7665726e6f723a3a5f5f6578656375746553657454696d656c6f636b506560408201527f6e64696e6741646d696e3a2073656e646572206d75737420626520676f7620676060820152663ab0b93234b0b760c91b608082015260a00190565b60208082526024908201527f476f7665726e6f723a3a73746174653a20696e76616c69642070726f706f73616040820152631b081a5960e21b606082015260800190565b60208082526053908201527f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7060408201527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560608201527218591e481858dd1a5d99481c1c9bdc1bdcd85b606a1b608082015260a00190565b602080825260409082018190527f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e20908201527f6f6e6c7920626520657865637574656420696620697420697320717565756564606082015260800190565b6020808252601190820152706164646974696f6e206f766572666c6f7760781b604082015260600190565b60208082526031908201527f476f7665726e6f723a3a5f5f61626469636174653a2073656e646572206d75736040820152703a1031329033b7bb1033bab0b93234b0b760791b606082015260800190565b6020808252603f908201527f476f7665726e6f723a3a5f71756575654f725265766572743a2070726f706f7360408201527f616c20616374696f6e20616c7265616479207175657565642061742065746100606082015260800190565b60208082526034908201527f476f7665726e6f723a3a5f5f61636365707441646d696e3a2073656e6465722060408201527336bab9ba1031329033b7bb1033bab0b93234b0b760611b606082015260800190565b60208082526028908201527f476f7665726e6f723a3a5f63617374566f74653a20766f74657220616c726561604082015267191e481d9bdd195960c21b606082015260800190565b6020808252602a908201527f476f7665726e6f723a3a63616e63656c3a2070726f706f7365722061626f7665604082015269081d1a1c995cda1bdb1960b21b606082015260800190565b60208082526025908201527f476f7665726e6f723a3a5f63617374566f74653a20766f74696e6720697320636040820152641b1bdcd95960da1b606082015260800190565b6020808252601590820152747375627472616374696f6e20756e646572666c6f7760581b604082015260600190565b6020808252603f908201527f476f7665726e6f723a3a71756575653a2070726f706f73616c2063616e206f6e60408201527f6c79206265207175657565642069662069742069732073756363656564656400606082015260800190565b6020808252602a908201527f476f7665726e6f723a3a63617374566f746542795369673a20696e76616c6964604082015269207369676e617475726560b01b606082015260800190565b8151151581526020808301511515908201526040918201516001600160601b03169181019190915260600190565b8981526001600160a01b0389166020820152610120604082018190526000906132d18382018b612772565b905082810360608401526132e5818a612808565b905082810360808401526132f981896127b5565b905082810360a084015261330d81886127b5565b90508560c08401528460e084015282810361010084015261332e8185612837565b9c9b505050505050505050505050565b60006101408c835260018060a01b038c1660208401528a60408401528960608401528860808401528760a08401528660c084015285151560e08401528415156101008401528061012084015261339681840185612837565b9d9c50505050505050505050505050565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156133d457600080fd5b604052919050565b600067ffffffffffffffff8211156133f2578081fd5b5060209081020190565b600067ffffffffffffffff821115613412578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b8381101561344757818101518382015260200161342f565b838111156113a85750506000910152565b6001600160a01b038116811461233657600080fd5b801515811461233657600080fdfea264697066735822122099306456efe52c93527a81cd4ad441b8f957b2534676b56de8091f972c2a7baf64736f6c63430007000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "VoteCast(address,uint256,bool,uint256)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "dclm8()": {
        "notice": "The address of the DAO token"
      },
      "guardian()": {
        "notice": "The address of the Governor Guardian"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "name()": {
        "notice": "The name of this contract"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "timelock()": {
        "notice": "The address of the timelock"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 85,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)1449"
      },
      {
        "astId": 88,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "dclm8",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(Dclm8Interface)1476"
      },
      {
        "astId": 91,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "guardian",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 94,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "proposalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 152,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "proposals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Proposal)131_storage)"
      },
      {
        "astId": 157,
        "contract": "contracts/Governance/Governor.sol:Governor",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(Dclm8Interface)1476": {
        "encoding": "inplace",
        "label": "contract Dclm8Interface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1449": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)138_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Governor.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)138_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)131_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Governor.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)131_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)131_storage": {
        "encoding": "inplace",
        "label": "struct Governor.Proposal",
        "members": [
          {
            "astId": 96,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 100,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 103,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 106,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 109,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 112,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 114,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 116,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 118,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 120,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 122,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 124,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 126,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "description",
            "offset": 0,
            "slot": "12",
            "type": "t_string_storage"
          },
          {
            "astId": 130,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)138_storage)"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(Receipt)138_storage": {
        "encoding": "inplace",
        "label": "struct Governor.Receipt",
        "members": [
          {
            "astId": 133,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 135,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 137,
            "contract": "contracts/Governance/Governor.sol:Governor",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}
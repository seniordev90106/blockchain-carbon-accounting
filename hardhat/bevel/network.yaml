
network:
  type: besu
  version: 21.10.6 

  env:
    type: "dev"              
    proxy: none               # use 'none' when not using 'ambassador' for a single cluster environment
    #  These ports are enabled per cluster, so if you have multiple clusters you do not need so many ports
    #  This sample uses a single cluster, so we have to open 3 ports for each Node. These ports are again specified for each organization below
    ambassadorPorts:                # Any additional Ambassador ports can be given here, this is valid only if proxy='ambassador'
      portRange:              # For a range of ports 
        from: 15010 
        to: 15052
    # ports: 15020,15021      # For specific ports
    loadBalancerSourceRanges: # (Optional) Default value is '0.0.0.0/0', this value can be changed to any other IP adres or list (comma-separated without spaces) of IP adresses, this is valid only if proxy='ambassador'
    retry_count: 50                 # Retry count for the checks on Kubernetes cluster
    external_dns: disabled           # Should be enabled if using external-dns for automatic route configuration
  
  docker:
    url: "index.docker.io/hyperledgerlabs"
    username: ""
    password: ""
  
  # Following are the configurations for the common Besu network
  config:    
    consensus: "ibft"                 # Options are "ibft", "ethash" and "clique".
    subject: "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB"
    transaction_manager: "tessera"
    tm_version: "21.7.3"
    tm_tls: True
    tm_trust: "tofu" 
    genesis: "/home/bevel/build/besu_genesis"  
    ## At least one Transaction Manager nodes public addresses should be provided.
    #  - "https://carrier.carrier-bes:15022" for orion
    #  - "https://carrier-tessera.carrier-bes" for tessera
    # The above domain name is formed by the (http or https)://(peer.name).(org.external_url_suffix):(ambassador tm_nodeport)
    tm_nodes: 
      - "https://carrier-tessera.carrier-bes"
  
  organizations:
    - organization:
      name: supplychain
      type: validator
      external_url_suffix: supplychain-bes.svc.cluster.local
      
      cloud_provider: azure   # Options: aws, azure, gcp

      k8s:
        context: ""
        config_file: "/home/bevel/build/config"
      vault:
        url: ""
        root_token: ""
        secret_path: "secretsv2"
      gitops:
        git_protocol: "https" # Option for git over https or ssh
        git_url: "https://github.com/username/bevel.git"         # Gitops https or ssh url for flux value files 
        branch: "develop"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-besu/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/hyperledger-besu/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/username/bevel.git"   # Gitops git repository URL for git push 
        username: "username"          # Git Service user who has rights to check-in in all branches
        password: "token"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "git@github.com"                # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)
      # As this is the validator org, it is hosting a few validators as services
      services:
        validators:
        - validator:
          name: validator1
          bootnode: true          # true if the validator node is used also a bootnode for the network
          p2p:
            port: 30303
            ambassador: 15010       #Port exposed on ambassador service (use one port per org if using single cluster)
          rpc:
            port: 8545
            ambassador: 15011       #Port exposed on ambassador service (use one port per org if using single cluster)
          ws:
            port: 8546
        - validator:
          name: validator2
          bootnode: true          # true if the validator node is used also a bootnode for the network
          p2p:
            port: 30303
            ambassador: 15012       #Port exposed on ambassador service (use one port per org if using single cluster)
          rpc:
            port: 8545
            ambassador: 15013       #Port exposed on ambassador service (use one port per org if using single cluster)
          ws:
            port: 8546          
        - validator:
          name: validator3
          bootnode: false          # true if the validator node is used also a bootnode for the network
          p2p:
            port: 30303
            ambassador: 15014       #Port exposed on ambassador service (use one port per org if using single cluster)
          rpc:
            port: 8545
            ambassador: 15015       #Port exposed on ambassador service (use one port per org if using single cluster)
          ws:
            port: 8546          
        - validator:
          name: validator4
          bootnode: false          # true if the validator node is used also a bootnode for the network
          p2p:
            port: 30303
            ambassador: 15016       #Port exposed on ambassador service (use one port per org if using single cluster)
          rpc:
            port: 8545
            ambassador: 15017       #Port exposed on ambassador service (use one port per org if using single cluster)
          ws:
            port: 8546

    - organization:
      name: carrier
      type: member
      external_url_suffix: carrier-bes.svc.cluster.local
      
      cloud_provider: azure   # Options: aws, azure, gcp
      k8s:
        context: ""
        config_file: "/home/bevel/build/config"
      vault:
        url: ""
        root_token: ""
        secret_path: "secretsv2"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "https" # Option for git over https or ssh
        git_url: "https://github.com/username/bevel.git"         # Gitops https or ssh url for flux value files 
        branch: "develop"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-besu/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/hyperledger-besu/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/username/bevel.git"   # Gitops git repository URL for git push 
        username: "username"          # Git Service user who has rights to check-in in all branches
        password: "token"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "git@github.com"                # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)
      # The participating nodes are named as peers
      services:
        peers:
        - peer:
          name: carrier
          subject: "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB" # This is the node subject. L=lat/long is mandatory for supplychain sample app
          geth_passphrase: "12345"  # Passphrase to be used to generate geth account
          lock: true        # Sets Besu node to lock or unlock mode. Can be true or false
          p2p:
            port: 30303
            ambassador: 15020       #Port exposed on ambassador service (use one port per org if using single cluster)
          rpc:
            port: 8545
            ambassador: 15021       #Port exposed on ambassador service (use one port per org if using single cluster)
          ws:
            port: 8546
          db:
            port: 3306        # Only applicable for tessra where mysql db is used
          tm_nodeport:
            port: 443          # use port: 15022 when transaction_manager = "orion"
            ambassador: 443    # use ambassador: 15022 when transaction_manager = "orion"
          tm_clientport:
            port: 8888           
